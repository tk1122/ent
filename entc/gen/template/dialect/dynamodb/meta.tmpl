{{/*
Copyright 2019-present Facebook Inc. All rights reserved.
This source code is licensed under the Apache 2.0 license found
in the LICENSE file in the root directory of this source tree.
*/}}

{{/* gotype: entgo.io/ent/entc/gen.Type*/}}

{{ define "dialect/dynamodb/meta/constants" }}
	// Table holds the table name of the {{ lower $.Name }} in the database.
	Table = "{{ $.Table }}"
	{{- range $e := $.Edges }}
		// {{ $e.TableConstant }} is the table that holds the {{ $e.Name }} relation/edge.
		{{- if $e.M2M }} The primary key declared below.{{ end }}
		{{ $e.TableConstant }} = "{{ $e.Rel.Table }}"
		{{- if ne $.Table $e.Type.Table }}
			// {{ $e.InverseTableConstant }} is the table name for the {{ $e.Type.Name }} entity.
			// It exists in this package in order to avoid circular dependency with the "{{ $e.Type.Package }}" package.
			{{ $e.InverseTableConstant }} = "{{ $e.Type.Table }}"
		{{- end }}
		{{- if not $e.M2M }}
			// {{ $e.AttributeConstant }} is the table column denoting the {{ $e.Name }} relation/edge.
			{{ $e.AttributeConstant }} = "{{ $e.Rel.Column }}"
		{{- end }}
	{{- end }}
{{ end }}

{{ define "dialect/dynamodb/meta/variables" }}
	// Keys holds all DynamoDB keys for {{ lower $.Name }} fields.
	var Keys = []string{
		{{ $.ID.Constant }},
		{{- range $f := $.Fields }}
			{{ $f.Constant }},
		{{- end }}
		{{- with $.ForeignKeys }}
			{{- range $fk := . }}
				"{{ $fk.Field.Name }}",
			{{- end }}
		{{- end }}
		{{- with $.NumM2M }}
			{{- range $e := $.Edges }}
				{{- if $e.M2M }}
					"{{ $e.Key }}",
				{{- end }}
			{{- end }}
		{{- end }}
	}
	{{/* if any of the edges owns a foreign-key */}}
	{{ with $.ForeignKeys }}
		// ForeignKeys holds the Mongo foreign-keys that are owned by the {{ $.Name }} type.
		var ForeignKeys = []string{
			{{- range $fk := . }}
				"{{ $fk.Field.Name }}",
			{{- end }}
		}
	{{ end }}
	{{ with $.NumM2M }}
		var (
			{{- range $_, $e := $.Edges }}
				{{- if $e.M2M }}
					// {{ $e.AttributeConstant }} and {{ $e.AttributeConstant }}2 are the collection keys denoting the
					// primary key for the {{ $e.Name }} relation (M2M).
					{{ $e.AttributesConstant }} = []string{"{{ index $e.Rel.Columns 0 }}", "{{ index $e.Rel.Columns 1 }}"}
				{{- end }}
			{{- end }}
		)
	{{ end }}
{{ end }}

{{ define "dialect/dynamodb/meta/functions" }}
// ValidKey reports if the key is valid (one of keys of collection's fields).
func ValidKey(key string) bool {
	for i := range Keys {
		if key == Keys[i] {
			return true
		}
	}
	{{- with $.UnexportedForeignKeys }}
		for i := range ForeignKeys {
			if key == ForeignKeys[i] {
				return true
			}
		}
	{{- end }}
	return false
}
{{ end }}
