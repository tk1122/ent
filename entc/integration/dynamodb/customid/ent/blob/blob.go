// Copyright 2019-present Facebook Inc. All rights reserved.
// This source code is licensed under the Apache 2.0 license found
// in the LICENSE file in the root directory of this source tree.

// Code generated by ent, DO NOT EDIT.

package blob

import (
	uuid "github.com/satori/go.uuid"
)

const (
	// Label holds the string label denoting the blob type in the database.
	Label = "blob"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// EdgeParent holds the string denoting the parent edge name in mutations.
	EdgeParent = "parent"
	// EdgeLinks holds the string denoting the links edge name in mutations.
	EdgeLinks = "links"
	// Table holds the table name of the blob in the database.
	Table = "blobs"
	// ParentTable is the table that holds the parent relation/edge.
	ParentTable = "blobs"
	// ParentAttribute is the table column denoting the parent relation/edge.
	ParentAttribute = "blob_parent"
	// LinksTable is the table that holds the links relation/edge. The primary key declared below.
	LinksTable = "blob_links"
)

// Keys holds all DynamoDB keys for blob fields.
var Keys = []string{
	FieldID,
	FieldUUID,
	"blob_parent",
	"link_id",
}

// ForeignKeys holds the Mongo foreign-keys that are owned by the Blob type.
var ForeignKeys = []string{
	"blob_parent",
}

var (
	// LinksAttribute and LinksAttribute2 are the collection keys denoting the
	// primary key for the links relation (M2M).
	LinksAttributes = []string{"blob_id", "link_id"}
)

// ValidKey reports if the key is valid (one of keys of collection's fields).
func ValidKey(key string) bool {
	for i := range Keys {
		if key == Keys[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if key == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultUUID holds the default value on creation for the "uuid" field.
	DefaultUUID func() uuid.UUID
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
