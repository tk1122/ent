// Copyright 2019-present Facebook Inc. All rights reserved.
// This source code is licensed under the Apache 2.0 license found
// in the LICENSE file in the root directory of this source tree.

// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/dynamodb/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BlobsAttributes  holds the attributes for the "blobs " table.
	BlobsAttributes = []*schema.Attribute{
		{Name: "id", Type: field.TypeUUID},
		{Name: "uuid", Type: field.TypeUUID},
	}
	// BlobsTable holds the schema information for the "blobs" table.
	BlobsTable = &schema.Table{
		Name:       "blobs",
		Attributes: BlobsAttributes,
		PrimaryKey: []*schema.KeySchema{
			{AttributeName: "id", KeyType: schema.KeyType("HASH")},
		},
	}
	// CarsAttributes  holds the attributes for the "cars " table.
	CarsAttributes = []*schema.Attribute{
		{Name: "id", Type: field.TypeInt},
		{Name: "before_id", Type: field.TypeFloat64},
		{Name: "after_id", Type: field.TypeFloat64},
		{Name: "model", Type: field.TypeString},
	}
	// CarsTable holds the schema information for the "cars" table.
	CarsTable = &schema.Table{
		Name:       "cars",
		Attributes: CarsAttributes,
		PrimaryKey: []*schema.KeySchema{
			{AttributeName: "id", KeyType: schema.KeyType("HASH")},
		},
	}
	// GroupsAttributes  holds the attributes for the "groups " table.
	GroupsAttributes = []*schema.Attribute{
		{Name: "id", Type: field.TypeInt},
	}
	// GroupsTable holds the schema information for the "groups" table.
	GroupsTable = &schema.Table{
		Name:       "groups",
		Attributes: GroupsAttributes,
		PrimaryKey: []*schema.KeySchema{
			{AttributeName: "id", KeyType: schema.KeyType("HASH")},
		},
	}
	// PetsAttributes  holds the attributes for the "pets " table.
	PetsAttributes = []*schema.Attribute{
		{Name: "id", Type: field.TypeString},
	}
	// PetsTable holds the schema information for the "pets" table.
	PetsTable = &schema.Table{
		Name:       "pets",
		Attributes: PetsAttributes,
		PrimaryKey: []*schema.KeySchema{
			{AttributeName: "id", KeyType: schema.KeyType("HASH")},
		},
	}
	// UsersAttributes  holds the attributes for the "users " table.
	UsersAttributes = []*schema.Attribute{
		{Name: "id", Type: field.TypeInt},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Attributes: UsersAttributes,
		PrimaryKey: []*schema.KeySchema{
			{AttributeName: "id", KeyType: schema.KeyType("HASH")},
		},
	}
	// BlobLinksAttributes  holds the attributes for the "blob_links " table.
	BlobLinksAttributes = []*schema.Attribute{
		{Name: "blob_id", Type: field.TypeUUID},
		{Name: "link_id", Type: field.TypeUUID},
	}
	// BlobLinksTable holds the schema information for the "blob_links" table.
	BlobLinksTable = &schema.Table{
		Name:       "blob_links",
		Attributes: BlobLinksAttributes,
		PrimaryKey: []*schema.KeySchema{
			{AttributeName: "blob_id", KeyType: schema.KeyType("HASH")},
			{AttributeName: "link_id", KeyType: schema.KeyType("RANGE")},
		},
	}
	// GroupUsersAttributes  holds the attributes for the "group_users " table.
	GroupUsersAttributes = []*schema.Attribute{
		{Name: "group_id", Type: field.TypeInt},
		{Name: "user_id", Type: field.TypeInt},
	}
	// GroupUsersTable holds the schema information for the "group_users" table.
	GroupUsersTable = &schema.Table{
		Name:       "group_users",
		Attributes: GroupUsersAttributes,
		PrimaryKey: []*schema.KeySchema{
			{AttributeName: "group_id", KeyType: schema.KeyType("HASH")},
			{AttributeName: "user_id", KeyType: schema.KeyType("RANGE")},
		},
	}
	// PetFriendsAttributes  holds the attributes for the "pet_friends " table.
	PetFriendsAttributes = []*schema.Attribute{
		{Name: "pet_id", Type: field.TypeString},
		{Name: "friend_id", Type: field.TypeString},
	}
	// PetFriendsTable holds the schema information for the "pet_friends" table.
	PetFriendsTable = &schema.Table{
		Name:       "pet_friends",
		Attributes: PetFriendsAttributes,
		PrimaryKey: []*schema.KeySchema{
			{AttributeName: "pet_id", KeyType: schema.KeyType("HASH")},
			{AttributeName: "friend_id", KeyType: schema.KeyType("RANGE")},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BlobsTable,
		CarsTable,
		GroupsTable,
		PetsTable,
		UsersTable,
		BlobLinksTable,
		GroupUsersTable,
		PetFriendsTable,
	}
)
